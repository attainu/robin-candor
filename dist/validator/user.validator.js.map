{"version":3,"sources":["../../src/validator/user.validator.js"],"names":["is_unique","data","type","obj","email","username","result","User","findOne","err","res","status","send","msg","console","log","user_validator","check_username","not","isEmpty","custom","Error","check_email","isEmail","check_password","check_phone","isMobilePhone","module","exports"],"mappings":"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","sourcesContent":["import {check} from 'express-validator';\nimport User from '../model/user.model';\n\nconst is_unique = async (data, type) => {\n    let obj;\n    if (type === 'email') {\n        obj = {email: data};\n    } else if (type === 'username') {\n        obj = {username: data};\n    }\n    let result=null\n     await User.findOne(obj, (err, data) => {\n        if (err) {\n            // Internal server error\n            res.status(500).send({msg: \"Internal Server Error\"});\n        } else {\n            if (data === null) {\n                console.log('returning unique');\n                result=true;\n            } else {\n                console.log('returning not unique');\n                result=false;\n            }\n        }\n        ;\n    });\n    return result\n}\nconst user_validator = {};\nuser_validator.check_username = () => {\n    return check('username').not().isEmpty().custom(async username => {\n        let result = await is_unique(username, 'username')\n        console.log(result)\n        if (!result) {\n            console.log('User name taken')\n            throw new Error('User name taken')\n        }\n        console.log('unique username')\n        return username;\n    })\n}\nuser_validator.check_email = () => {\n    return check('email').not().isEmpty().isEmail().custom(async email => {\n        let result = await is_unique(email, 'email')\n        console.log(result)\n        if (!result) {\n            console.log('Email taken')\n            throw new Error('Email taken')\n        }\n        console.log('unique email')\n        return email;\n    })\n}\nuser_validator.check_password = () => {\n    return check('password').not().isEmpty();\n}\nuser_validator.check_phone = () => {\n    return check('phone').not().isEmpty().isMobilePhone();\n}\nmodule.exports = user_validator;"],"file":"user.validator.js"}