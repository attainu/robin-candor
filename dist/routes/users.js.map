{"version":3,"sources":["../../src/routes/users.js"],"names":["dotenv","config","authenticateToken","req","res","next","token","cookies","jwt","verify","process","env","jwt_key","err","data","status","send","msg","user","name","router","express","Router","post","user_controller","request_otp","cloudUpload","userValidator","check_username","check_email","check_password","check_phone","createUser","login","get","loginPage","signPage","logout","submit_otp","module","exports"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAFAA,mBAAOC,MAAP;;AAIA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC5C,MAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAY,UAAZ,CAAd;;AACA,MAAI,CAACD,KAAL,EAAY;AACVD,IAAAA,IAAI;AACL,GAFD,MAEK;AACHG,6BAAIC,MAAJ,CAAWH,KAAX,EAAkBI,OAAO,CAACC,GAAR,CAAYC,OAA9B,EAAuC,UAACC,GAAD,EAAMC,IAAN,EAAe;AACtD,UAAID,GAAJ,EAAS,OAAOT,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,GAAG,EAAE;AAAN,OAArB,CAAP;AACTd,MAAAA,GAAG,CAACe,IAAJ,GAAWJ,IAAI,CAACK,IAAhB;AACAd,MAAAA,IAAI;AACL,KAJC;AAKD;AAGF,CAbD;;AAeA,IAAMe,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEAF,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA2BC,iBAAgBC,WAA3C;AAEAL,MAAM,CAACG,IAAP,CAAY,aAAZ,EAA0BrB,iBAA1B,EAA6CwB,kBAA7C,EAA0D,CAACC,kBAAcC,cAAd,EAAD,EAAiCD,kBAAcE,WAAd,EAAjC,EAA8DF,kBAAcG,cAAd,EAA9D,EAA8FH,kBAAcI,WAAd,EAA9F,CAA1D,EAAsLP,iBAAgBQ,UAAtM;AAEAZ,MAAM,CAACG,IAAP,CAAY,QAAZ,EAAqBrB,iBAArB,EAAwCsB,iBAAgBS,KAAxD;AAEAb,MAAM,CAACc,GAAP,CAAW,YAAX,EAAwBhC,iBAAxB,EAA2CsB,iBAAgBW,SAA3D;AAEAf,MAAM,CAACc,GAAP,CAAW,WAAX,EAAuBhC,iBAAvB,EAA0CsB,iBAAgBY,QAA1D;AAEAhB,MAAM,CAACc,GAAP,CAAW,SAAX,EAAqBV,iBAAgBa,MAArC;AAEAjB,MAAM,CAACc,GAAP,CAAW,aAAX,EAAyBV,iBAAgBc,UAAzC;AAGAC,MAAM,CAACC,OAAP,GAAiBpB,MAAjB","sourcesContent":["import express from 'express';\r\nimport user_controller from '../controller/user.controller';\r\nimport jwt from 'jsonwebtoken';\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\nimport userValidator from '../validator/user.validator';\r\nimport cloudUpload from '../utils/multer';\r\n\r\nconst authenticateToken = (req, res, next) => {\r\n  const token = req.cookies['awtToken'];\r\n  if (!token) {\r\n    next()\r\n  }else{\r\n    jwt.verify(token, process.env.jwt_key, (err, data) => {\r\n    if (err) return res.status(403).send({msg: 'Unauthorized Forbidden'});\r\n    req.user = data.name;\r\n    next()\r\n  });\r\n  }\r\n\r\n\r\n};\r\n\r\nconst router = express.Router();\r\n\r\nrouter.post('/request_otp',user_controller.request_otp);\r\n\r\nrouter.post('/createuser',authenticateToken, cloudUpload, [userValidator.check_username(), userValidator.check_email(), userValidator.check_password(), userValidator.check_phone()], user_controller.createUser);\r\n\r\nrouter.post('/login',authenticateToken, user_controller.login);\r\n\r\nrouter.get('/loginPage',authenticateToken, user_controller.loginPage);\r\n\r\nrouter.get('/signPage',authenticateToken, user_controller.signPage);\r\n\r\nrouter.get('/logout',user_controller.logout);\r\n\r\nrouter.get('/submit_otp',user_controller.submit_otp);\r\n\r\n\r\nmodule.exports = router;\r\n"],"file":"users.js"}